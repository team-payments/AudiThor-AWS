name: Deploy Frontend to S3 + CloudFront

on:
  push:
    branches: [ "main" ]
    paths:
      - "frontend/**"
      - "public/**"
      - ".github/workflows/deploy-frontend.yml"
  workflow_dispatch:

# Evita despliegues paralelos sobre el mismo bucket
concurrency:
  group: deploy-frontend
  cancel-in-progress: true

permissions:
  id-token: write      # necesario para OIDC
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}                # ej. us-west-2
  S3_BUCKET: ${{ secrets.S3_BUCKET }}                  # ej. audithor-frontend
  S3_PREFIX: frontend-dist                             # mantenemos la carpeta del bucket
  CF_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Asumir el rol OIDC (ya creado en IAM)
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_FRONTEND }}
          aws-region: ${{ env.AWS_REGION }}

      # ─────────────────────────────────────────────────────────────
      # ELIGE UNA DE ESTAS DOS OPCIONES DE BUILD

      # Opción A: ya tienes los estáticos listos en 'public' o 'frontend/dist'
      - name: Select source folder
        run: |
          # export SOURCE_DIR=public
          export SOURCE_DIR=frontend/dist
          echo "SOURCE_DIR=$SOURCE_DIR" >> $GITHUB_ENV

      # Opción B: necesitas compilar (React/Vite/Next static export, etc.)
      # - name: Setup Node
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: "20"
      #
      # - name: Install & build
      #   working-directory: frontend
      #   run: |
      #     npm ci
      #     npm run build
      #     echo "SOURCE_DIR=frontend/dist" >> $GITHUB_ENV

      # ─────────────────────────────────────────────────────────────

      - name: Sync to S3 (to bucket/prefix)
        run: |
          DEST="s3://${S3_BUCKET}/${S3_PREFIX}"
          echo "Uploading to $DEST"
          aws s3 sync "$SOURCE_DIR" "$DEST" \
            --delete \
            --only-show-errors

      # Cache-control fino: HTML sin caché
      - name: Set cache headers for HTML
        run: |
          DEST="s3://${S3_BUCKET}/${S3_PREFIX}"
          aws s3 cp "$DEST" "$DEST" \
            --recursive \
            --exclude "*" --include "*.html" \
            --metadata-directive REPLACE \
            --cache-control "no-store, max-age=0" \
            --content-type "text/html"

      # Cache-control para estáticos (1 año, immutable)
      - name: Set cache headers for static assets
        run: |
          DEST="s3://${S3_BUCKET}/${S3_PREFIX}"
          aws s3 cp "$DEST" "$DEST" \
            --recursive \
            --exclude "*" \
            --include "*.js" --include "*.css" \
            --include "*.png" --include "*.jpg" --include "*.jpeg" --include "*.svg" \
            --include "*.webp" --include "*.gif" --include "*.ico" --include "*.woff" --include "*.woff2" \
            --metadata-directive REPLACE \
            --cache-control "public, max-age=31536000, immutable"

      - name: Create CloudFront invalidation
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${CF_DISTRIBUTION_ID}" \
            --paths "/*"
