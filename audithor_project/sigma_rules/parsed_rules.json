[
  {
    "rule_id": "4f60cc0-36fb-42b7-9b58-a5b53019fb74",
    "title": "AWS CloudTrail Attach Policy",
    "description": "Detects attaching a policy to an IAM user",
    "severity": "medium",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.persistence",
      "attack.t1078"
    ],
    "logsource": {
      "product": "aws",
      "service": "iam"
    },
    "detection": {
      "selection_source": {
        "eventSource": "iam.amazonaws.com",
        "eventName": [
          "AttachUserPolicy",
          "AttachGroupPolicy",
          "AttachRolePolicy"
        ]
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Valid IAM user creation"
    ],
    "references": [
      "https://traildiscover.cloud/#IAM-AttachPolicy"
    ],
    "_filename": "aws_cloudtrail_attachpolicy.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "iam.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "AttachUserPolicy",
          "AttachGroupPolicy",
          "AttachRolePolicy"
        ]
      }
    }
  },
  {
    "rule_id": "4f60cc0-36fb-42b7-9b58-a5b53019fb74",
    "title": "AWS CloudTrail IAM User Creation",
    "description": "Detects creation of an IAM user",
    "severity": "medium",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.persistence",
      "attack.t1078"
    ],
    "logsource": {
      "product": "aws",
      "service": "iam"
    },
    "detection": {
      "selection_source": {
        "eventSource": "iam.amazonaws.com",
        "eventName": [
          "CreateUser"
        ]
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Valid IAM user creation"
    ],
    "references": [
      "https://traildiscover.cloud/#IAM-CreateUser"
    ],
    "_filename": "aws_cloudtrail_create_iam.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "iam.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "CreateUser"
        ]
      }
    }
  },
  {
    "rule_id": "4db60cc0-36fb-42b7-9b58-a5b53019fb74",
    "title": "AWS CloudTrail Important Change",
    "description": "Detects disabling, deleting and updating of a Trail",
    "severity": "medium",
    "author": "vitaliy0x1",
    "mitre_tags": [
      "attack.defense-evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection_source": {
        "eventSource": "cloudtrail.amazonaws.com",
        "eventName": [
          "StopLogging",
          "UpdateTrail",
          "DeleteTrail"
        ]
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Valid change in a Trail"
    ],
    "references": [
      "https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html"
    ],
    "_filename": "aws_cloudtrail_disable_logging.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "cloudtrail.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "StopLogging",
          "UpdateTrail",
          "DeleteTrail"
        ]
      }
    }
  },
  {
    "rule_id": "e1f7febb-7b94-4234-b5c6-00fb8500f5dd",
    "title": "New Network ACL Entry Added",
    "description": "Detects that network ACL entries have been added to a route table which could indicate that new attack vectors have been opened up in the AWS account.\n",
    "severity": "low",
    "author": "jamesc-grafana",
    "mitre_tags": [
      "attack.initial-access",
      "attack.t1190"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "ec2.amazonaws.com",
        "eventName": "CreateNetworkAclEntry"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Legitimate use of ACLs to enable customer and staff access from the public internet into a public VPC"
    ],
    "references": [
      "https://www.gorillastack.com/blog/real-time-events/important-aws-cloudtrail-security-events-tracking/"
    ],
    "_filename": "aws_cloudtrail_new_acl_entries.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ec2.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "CreateNetworkAclEntry"
      }
    }
  },
  {
    "rule_id": "c803b2ce-c4a2-4836-beae-b112010390b1",
    "title": "New Network Route Added",
    "description": "Detects the addition of a new network route to a route table in AWS.\n",
    "severity": "medium",
    "author": "jamesc-grafana",
    "mitre_tags": [
      "attack.initial-access",
      "attack.t1190"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "ec2.amazonaws.com",
        "eventName": "CreateRoute"
      },
      "condition": "selection"
    },
    "false_positives": [
      "New VPC Creation requiring setup of a new route table",
      "New subnets added requiring routing setup"
    ],
    "references": [
      "https://www.gorillastack.com/blog/real-time-events/important-aws-cloudtrail-security-events-tracking/"
    ],
    "_filename": "aws_cloudtrail_new_route_added.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ec2.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "CreateRoute"
      }
    }
  },
  {
    "rule_id": "e7f3c2d1-4b5a-6c7d-8e9f-0a1b2c3d4e5f",
    "title": "AWS CloudTrail PutEventSelectors with includeManagementEvents Disabled",
    "description": "Detects usage of the PutEventSelectors API call with includeManagementEvents set to false, which disables logging of management events in AWS CloudTrail.",
    "severity": "high",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "cloudtrail.amazonaws.com",
        "eventName": "PutEventSelectors"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Legitimate administrative actions modifying event selectors"
    ],
    "references": [
      "https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.cloudtrail-event-selectors/",
      "https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_PutEventSelectors.html"
    ],
    "_filename": "aws_cloudtrail_puteventselectors.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "cloudtrail.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "PutEventSelectors"
      }
    }
  },
  {
    "rule_id": "6fb77778-040f-4015-9440-572aa9b6b580",
    "title": "Ingress/Egress Security Group Modification",
    "description": "Detects when an account makes changes to the ingress or egress rules of a security group.\nThis can indicate that an attacker is attempting to open up new attack vectors in the account, that they are trying to exfiltrate data over the network, or that they are trying to allow machines in that VPC/Subnet to contact a C&C server.\n",
    "severity": "medium",
    "author": "jamesc-grafana",
    "mitre_tags": [
      "attack.initial-access",
      "attack.t1190"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "ec2.amazonaws.com",
        "eventName": [
          "AuthorizeSecurityGroupEgress",
          "AuthorizeSecurityGroupIngress",
          "RevokeSecurityGroupEgress",
          "RevokeSecurityGroupIngress"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "New VPCs and Subnets being setup requiring a different security profile to those already defined",
      "A single port being opened for a new service that is known to be deploying",
      "Administrators closing unused ports to reduce the attack surface"
    ],
    "references": [
      "https://www.gorillastack.com/blog/real-time-events/important-aws-cloudtrail-security-events-tracking/"
    ],
    "_filename": "aws_cloudtrail_security_group_change_ingress_egress.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ec2.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "AuthorizeSecurityGroupEgress",
          "AuthorizeSecurityGroupIngress",
          "RevokeSecurityGroupEgress",
          "RevokeSecurityGroupIngress"
        ]
      }
    }
  },
  {
    "rule_id": "7a4409fc-f8ca-45f6-8006-127d779eaad9",
    "title": "LoadBalancer Security Group Modification",
    "description": "Detects changes to the security groups associated with an Elastic Load Balancer (ELB) or Application Load Balancer (ALB).\nThis can indicate that a misconfiguration allowing more traffic into the system than required, or could indicate that an attacker is attempting to enable new connections into a VPC or subnet controlled by the account.\n",
    "severity": "medium",
    "author": "jamesc-grafana",
    "mitre_tags": [
      "attack.initial-access",
      "attack.t1190"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "elasticloadbalancing.amazonaws.com",
        "eventName": [
          "ApplySecurityGroupsToLoadBalancer",
          "SetSecurityGroups"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "Repurposing of an ELB or ALB to serve a different or additional application",
      "Changes to security groups to allow for new services to be deployed"
    ],
    "references": [
      "https://www.gorillastack.com/blog/real-time-events/important-aws-cloudtrail-security-events-tracking/"
    ],
    "_filename": "aws_cloudtrail_security_group_change_loadbalancer.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "elasticloadbalancing.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "ApplySecurityGroupsToLoadBalancer",
          "SetSecurityGroups"
        ]
      }
    }
  },
  {
    "rule_id": "14f3f1c8-02d5-43a2-a191-91ffb52d3015",
    "title": "RDS Database Security Group Modification",
    "description": "Detects changes to the security group entries for RDS databases.\nThis can indicate that a misconfiguration has occurred which potentially exposes the database to the public internet, a wider audience within the VPC or that removal of valid rules has occurred which could impact the availability of the database to legitimate services and users.\n",
    "severity": "medium",
    "author": "jamesc-grafana",
    "mitre_tags": [
      "attack.initial-access",
      "attack.t1190"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "rds.amazonaws.com",
        "eventName": [
          "AuthorizeDBSecurityGroupIngress",
          "CreateDBSecurityGroup",
          "DeleteDBSecurityGroup",
          "RevokeDBSecurityGroupIngress"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "Creation of a new Database that needs new security group rules"
    ],
    "references": [
      "https://www.gorillastack.com/blog/real-time-events/important-aws-cloudtrail-security-events-tracking/"
    ],
    "_filename": "aws_cloudtrail_security_group_change_rds.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "rds.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "AuthorizeDBSecurityGroupIngress",
          "CreateDBSecurityGroup",
          "DeleteDBSecurityGroup",
          "RevokeDBSecurityGroupIngress"
        ]
      }
    }
  },
  {
    "rule_id": "38e7f511-3f74-41d4-836e-f57dfa18eead",
    "title": "Potential Malicious Usage of CloudTrail System Manager",
    "description": "Detect when System Manager successfully executes commands against an instance.\n",
    "severity": "high",
    "author": "jamesc-grafana",
    "mitre_tags": [
      "attack.privilege-escalation",
      "attack.t1566",
      "attack.t1566.002"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventName": "SendCommand",
        "eventSource": "ssm.amazonaws.com",
        "responseElements.command.status": "Success"
      },
      "condition": "selection"
    },
    "false_positives": [
      "There are legitimate uses of SSM to send commands to EC2 instances",
      "Legitimate users may have to use SSM to perform actions against machines in the Cloud to update or maintain them"
    ],
    "references": [
      "https://github.com/elastic/detection-rules/blob/main/rules/integrations/aws/initial_access_via_system_manager.toml"
    ],
    "_filename": "aws_cloudtrail_ssm_malicious_usage.yml",
    "_parsed_conditions": {
      "eventName": {
        "type": "exact",
        "value": "SendCommand"
      },
      "eventSource": {
        "type": "exact",
        "value": "ssm.amazonaws.com"
      },
      "responseElements.command.status": {
        "type": "exact",
        "value": "Success"
      }
    }
  },
  {
    "rule_id": "07330162-dba1-4746-8121-a9647d49d297",
    "title": "AWS Config Disabling Channel/Recorder",
    "description": "Detects AWS Config Service disabling",
    "severity": "high",
    "author": "vitaliy0x1",
    "mitre_tags": [
      "attack.defense-evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "config.amazonaws.com",
        "eventName": [
          "DeleteDeliveryChannel",
          "StopConfigurationRecorder"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "Valid change in AWS Config Service"
    ],
    "references": [
      "https://docs.aws.amazon.com/config/latest/developerguide/cloudtrail-log-files-for-aws-config.html"
    ],
    "_filename": "aws_config_disable_recording.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "config.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "DeleteDeliveryChannel",
          "StopConfigurationRecorder"
        ]
      }
    }
  },
  {
    "rule_id": "f8103686-e3e8-46f3-be72-65f7fcb4aa53",
    "title": "AWS Console GetSigninToken Potential Abuse",
    "description": "Detects potentially suspicious events involving \"GetSigninToken\".\nAn adversary using the \"aws_consoler\" tool can leverage this console API to create temporary federated credential that help obfuscate which AWS credential is compromised (the original access key) and enables the adversary to pivot from the AWS CLI to console sessions without the need for MFA using the new access key issued in this request.\n",
    "severity": "medium",
    "author": "Chester Le Bron (@123Le_Bron)",
    "mitre_tags": [
      "attack.lateral-movement",
      "attack.t1021.007",
      "attack.t1550.001"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "signin.amazonaws.com",
        "eventName": "GetSigninToken"
      },
      "filter_main_console_ua": {
        "userAgent|contains": "Jersey"
      },
      "condition": "selection and not filter_main_console_ua"
    },
    "false_positives": [
      "GetSigninToken events will occur when using AWS SSO portal to login and will generate false positives if you do not filter for the expected user agent(s), see filter. Non-SSO configured roles would be abnormal and should be investigated."
    ],
    "references": [
      "https://github.com/NetSPI/aws_consoler",
      "https://www.crowdstrike.com/blog/analysis-of-intrusion-campaign-targeting-telecom-and-bpo-companies/"
    ],
    "_filename": "aws_console_getsignintoken.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "signin.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "GetSigninToken"
      }
    }
  },
  {
    "rule_id": "20f754db-d025-4a8f-9d74-e0037e999a9a",
    "title": "SES Identity Has Been Deleted",
    "description": "Detects an instance of an SES identity being deleted via the \"DeleteIdentity\" event. This may be an indicator of an adversary removing the account that carried out suspicious or malicious activities",
    "severity": "medium",
    "author": "Janantha Marasinghe",
    "mitre_tags": [
      "attack.defense-evasion",
      "attack.t1070"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "ses.amazonaws.com",
        "eventName": "DeleteIdentity"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Unknown"
    ],
    "references": [
      "https://unit42.paloaltonetworks.com/compromised-cloud-compute-credentials/"
    ],
    "_filename": "aws_delete_identity.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ses.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "DeleteIdentity"
      }
    }
  },
  {
    "rule_id": "ccd6a6c8-bb4e-4a91-9d2a-07e632819374",
    "title": "AWS SAML Provider Deletion Activity",
    "description": "Detects the deletion of an AWS SAML provider, potentially indicating malicious intent to disrupt administrative or security team access.\nAn attacker can remove the SAML provider for the information security team or a team of system administrators, to make it difficult for them to work and investigate at the time of the attack and after it.\n",
    "severity": "medium",
    "author": "Ivan Saakov",
    "mitre_tags": [
      "attack.t1078.004",
      "attack.privilege-escalation",
      "attack.t1531"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "iam.amazonaws.com",
        "eventName": "DeleteSAMLProvider"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Automated processes using tools like Terraform may trigger this alert.",
      "Legitimate administrative actions by authorized system administrators could cause this alert. Verify the user identity, user agent, and hostname to ensure they are expected.",
      "Deletions by unfamiliar users should be investigated. If the behavior is known and expected, it can be exempted from the rule."
    ],
    "references": [
      "https://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSAMLProvider.html"
    ],
    "_filename": "aws_delete_saml_provider.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "iam.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "DeleteSAMLProvider"
      }
    }
  },
  {
    "rule_id": "a136ac98-b2bc-4189-a14d-f0d0388e57a7",
    "title": "AWS S3 Bucket Versioning Disable",
    "description": "Detects when S3 bucket versioning is disabled. Threat actors use this technique during AWS ransomware incidents prior to deleting S3 objects.",
    "severity": "medium",
    "author": "Sean Johnstone | Unit 42",
    "mitre_tags": [
      "attack.impact",
      "attack.t1490"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "s3.amazonaws.com",
        "eventName": "PutBucketVersioning",
        "requestParameters|contains": "Suspended"
      },
      "condition": "selection"
    },
    "false_positives": [
      "AWS administrator legitimately disabling bucket versioning"
    ],
    "references": [
      "https://invictus-ir.medium.com/ransomware-in-the-cloud-7f14805bbe82"
    ],
    "_filename": "aws_disable_bucket_versioning.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "s3.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "PutBucketVersioning"
      },
      "requestParameters|contains": {
        "type": "exact",
        "value": "Suspended"
      }
    }
  },
  {
    "rule_id": "7b8c9d0e-1f2a-3b4c-5d6e-7f8g9h0i1j2k",
    "title": "AWS EC2 DeleteFlowLogs API Call",
    "description": "Detects usage of the DeleteFlowLogs API call, which removes VPC Flow Logs and can hinder network traffic monitoring.",
    "severity": "high",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "product": "aws",
      "service": "ec2",
      "category": "management"
    },
    "detection": {
      "selection": {
        "eventSource": "ec2.amazonaws.com",
        "eventName": "DeleteFlowLogs"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Legitimate administrative actions removing obsolete VPC Flow Logs"
    ],
    "references": [
      "https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.vpc-remove-flow-logs/",
      "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteFlowLogs.html"
    ],
    "_filename": "aws_ec2_deleteflowlogs.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ec2.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "DeleteFlowLogs"
      }
    }
  },
  {
    "rule_id": "16124c2d-e40b-4fcc-8f2c-5ab7870a2223",
    "title": "AWS EC2 Disable EBS Encryption",
    "description": "Identifies disabling of default Amazon Elastic Block Store (EBS) encryption in the current region.\nDisabling default encryption does not change the encryption status of your existing volumes.\n",
    "severity": "medium",
    "author": "Sittikorn S",
    "mitre_tags": [
      "attack.impact",
      "attack.t1486",
      "attack.t1565"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "ec2.amazonaws.com",
        "eventName": "DisableEbsEncryptionByDefault"
      },
      "condition": "selection"
    },
    "false_positives": [
      "System Administrator Activities",
      "DEV, UAT, SAT environment. You should apply this rule with PROD account only."
    ],
    "references": [
      "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DisableEbsEncryptionByDefault.html"
    ],
    "_filename": "aws_ec2_disable_encryption.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ec2.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "DisableEbsEncryptionByDefault"
      }
    }
  },
  {
    "rule_id": "1a2b3c4d-5e6f-7a8b-9c0d-1e2f3a4b5c6d",
    "title": "AWS EC2 GetPasswordData API Call",
    "description": "Detects usage of the GetPasswordData API call, which retrieves the encrypted administrator password for a Windows EC2 instance.",
    "severity": "medium",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.credential_access",
      "attack.t1552"
    ],
    "logsource": {
      "product": "aws",
      "service": "ec2"
    },
    "detection": {
      "selection": {
        "eventSource": "ec2.amazonaws.com",
        "eventName": "GetPasswordData"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Legitimate administrative actions retrieving Windows EC2 instance passwords"
    ],
    "references": [
      "https://stratus-red-team.cloud/attack-techniques/AWS/aws.credential-access.ec2-get-password-data/",
      "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html",
      "https://traildiscover.cloud/#EC2-GetPasswordData"
    ],
    "_filename": "aws_ec2_getpassworddate.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ec2.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "GetPasswordData"
      }
    }
  },
  {
    "rule_id": "92f84194-8d9a-4ee0-8699-c30bfac59780",
    "title": "AWS Key Pair Import Activity",
    "description": "Detects the import of SSH key pairs into AWS EC2, which may indicate an attacker attempting to gain unauthorized access to instances. This activity could lead to initial access, persistence, or privilege escalation, potentially compromising sensitive data and operations.\n",
    "severity": "medium",
    "author": "Ivan Saakov",
    "mitre_tags": [
      "attack.initial-access",
      "attack.t1078",
      "attack.persistence",
      "attack.privilege-escalation"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "ec2.amazonaws.com",
        "eventName": "ImportKeyPair"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Legitimate administrative actions by authorized users importing keys for valid purposes.",
      "Automated processes for infrastructure setup may trigger this alert.",
      "Verify the user identity, user agent, and source IP address to ensure they are expected."
    ],
    "references": [
      "https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ImportKeyPair.html"
    ],
    "_filename": "aws_ec2_import_key_pair_activity.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ec2.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "ImportKeyPair"
      }
    }
  },
  {
    "rule_id": "1ab3c5ed-5baf-417b-bb6b-78ca33f6c3df",
    "title": "AWS EC2 Startup Shell Script Change",
    "description": "Detects changes to the EC2 instance startup script. The shell script will be executed as root/SYSTEM every time the specific instances are booted up.",
    "severity": "high",
    "author": "faloker",
    "mitre_tags": [
      "attack.execution",
      "attack.t1059.001",
      "attack.t1059.003",
      "attack.t1059.004"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection_source": {
        "eventSource": "ec2.amazonaws.com",
        "requestParameters.attribute": "userData",
        "eventName": "ModifyInstanceAttribute"
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Valid changes to the startup script"
    ],
    "references": [
      "https://github.com/RhinoSecurityLabs/pacu/blob/866376cd711666c775bbfcde0524c817f2c5b181/pacu/modules/ec2__startup_shell_script/main.py#L9"
    ],
    "_filename": "aws_ec2_startup_script_change.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ec2.amazonaws.com"
      },
      "requestParameters.attribute": {
        "type": "exact",
        "value": "userData"
      },
      "eventName": {
        "type": "exact",
        "value": "ModifyInstanceAttribute"
      }
    }
  },
  {
    "rule_id": "25cb1ba1-8a19-4a23-a198-d252664c8cef",
    "title": "AWS EFS Fileshare Modified or Deleted",
    "description": "Detects when a EFS Fileshare is modified or deleted.\nYou can't delete a file system that is in use.\nIf the file system has any mount targets, the adversary must first delete them, so deletion of a mount will occur before deletion of a fileshare.\n",
    "severity": "medium",
    "author": "Austin Songer @austinsonger",
    "mitre_tags": [
      "attack.impact"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "elasticfilesystem.amazonaws.com",
        "eventName": "DeleteFileSystem"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Unknown"
    ],
    "references": [
      "https://docs.aws.amazon.com/efs/latest/ug/API_DeleteFileSystem.html"
    ],
    "_filename": "aws_efs_fileshare_modified_or_deleted.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "elasticfilesystem.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "DeleteFileSystem"
      }
    }
  },
  {
    "rule_id": "6a7ba45c-63d8-473e-9736-2eaabff79964",
    "title": "AWS EFS Fileshare Mount Modified or Deleted",
    "description": "Detects when a EFS Fileshare Mount is modified or deleted. An adversary breaking any file system using the mount target that is being deleted, which might disrupt instances or applications using those mounts.",
    "severity": "medium",
    "author": "Austin Songer @austinsonger",
    "mitre_tags": [
      "attack.impact",
      "attack.t1485"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "elasticfilesystem.amazonaws.com",
        "eventName": "DeleteMountTarget"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Unknown"
    ],
    "references": [
      "https://docs.aws.amazon.com/efs/latest/ug/API_DeleteMountTarget.html"
    ],
    "_filename": "aws_efs_fileshare_mount_modified_or_deleted.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "elasticfilesystem.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "DeleteMountTarget"
      }
    }
  },
  {
    "rule_id": "33d50d03-20ec-4b74-a74e-1e65a38af1c0",
    "title": "AWS EKS Cluster Created or Deleted",
    "description": "Identifies when an EKS cluster is created or deleted.",
    "severity": "low",
    "author": "Austin Songer",
    "mitre_tags": [
      "attack.impact",
      "attack.t1485"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "eks.amazonaws.com",
        "eventName": [
          "CreateCluster",
          "DeleteCluster"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "EKS Cluster being created or deleted may be performed by a system administrator.",
      "Verify whether the user identity, user agent, and/or hostname should be making changes in your environment.",
      "EKS Cluster created or deleted from unfamiliar users should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://any-api.com/amazonaws_com/eks/docs/API_Description"
    ],
    "_filename": "aws_eks_cluster_created_or_deleted.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "eks.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "CreateCluster",
          "DeleteCluster"
        ]
      }
    }
  },
  {
    "rule_id": "4ae68615-866f-4304-b24b-ba048dfa5ca7",
    "title": "AWS ElastiCache Security Group Created",
    "description": "Detects when an ElastiCache security group has been created.",
    "severity": "low",
    "author": "Austin Songer @austinsonger",
    "mitre_tags": [
      "attack.persistence",
      "attack.t1136",
      "attack.t1136.003"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "elasticache.amazonaws.com",
        "eventName": "CreateCacheSecurityGroup"
      },
      "condition": "selection"
    },
    "false_positives": [
      "A ElastiCache security group may be created by a system or network administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment. Security group creations from unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://github.com/elastic/detection-rules/blob/598f3d7e0a63221c0703ad9a0ea7e22e7bc5961e/rules/integrations/aws/persistence_elasticache_security_group_creation.toml"
    ],
    "_filename": "aws_elasticache_security_group_created.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "elasticache.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "CreateCacheSecurityGroup"
      }
    }
  },
  {
    "rule_id": "7c797da2-9cf2-4523-ba64-33b06339f0cc",
    "title": "AWS ElastiCache Security Group Modified or Deleted",
    "description": "Identifies when an ElastiCache security group has been modified or deleted.",
    "severity": "low",
    "author": "Austin Songer @austinsonger",
    "mitre_tags": [
      "attack.impact",
      "attack.t1531"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "elasticache.amazonaws.com",
        "eventName": [
          "DeleteCacheSecurityGroup",
          "AuthorizeCacheSecurityGroupIngress",
          "RevokeCacheSecurityGroupIngress",
          "AuthorizeCacheSecurityGroupEgress",
          "RevokeCacheSecurityGroupEgress"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "A ElastiCache security group deletion may be done by a system or network administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment. Security Group deletions from unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://github.com/elastic/detection-rules/blob/7d5efd68603f42be5e125b5a6a503b2ef3ac0f4e/rules/integrations/aws/impact_elasticache_security_group_modified_or_deleted.toml"
    ],
    "_filename": "aws_elasticache_security_group_modified_or_deleted.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "elasticache.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "DeleteCacheSecurityGroup",
          "AuthorizeCacheSecurityGroupIngress",
          "RevokeCacheSecurityGroupIngress",
          "AuthorizeCacheSecurityGroupEgress",
          "RevokeCacheSecurityGroupEgress"
        ]
      }
    }
  },
  {
    "rule_id": "f305fd62-beca-47da-ad95-7690a0620084",
    "title": "Potential Bucket Enumeration on AWS",
    "description": "Looks for potential enumeration of AWS buckets via ListBuckets.",
    "severity": "low",
    "author": "Christopher Peacock @securepeacock, SCYTHE @scythe_io (modified by adanalvarez)",
    "mitre_tags": [
      "attack.discovery",
      "attack.t1580"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "s3.amazonaws.com",
        "eventName": "ListBuckets"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Administrators listing buckets, it may be necessary to filter out users who commonly conduct this activity."
    ],
    "references": [
      "https://github.com/Lifka/hacking-resources/blob/c2ae355d381bd0c9f0b32c4ead049f44e5b1573f/cloud-hacking-cheat-sheets.md",
      "https://jamesonhacking.blogspot.com/2020/12/pivoting-to-private-aws-s3-buckets.html",
      "https://securitycafe.ro/2022/12/14/aws-enumeration-part-ii-practical-enumeration/"
    ],
    "_filename": "aws_enum_buckets.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "s3.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "ListBuckets"
      }
    }
  },
  {
    "rule_id": "6e61ee20-ce00-4f8d-8aee-bedd8216f7e3",
    "title": "AWS GuardDuty Important Change",
    "description": "Detects updates of the GuardDuty list of trusted IPs, perhaps to disable security alerts against malicious IPs.",
    "severity": "high",
    "author": "faloker",
    "mitre_tags": [
      "attack.defense-evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection_source": {
        "eventSource": "guardduty.amazonaws.com",
        "eventName": "CreateIPSet"
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Valid change in the GuardDuty (e.g. to ignore internal scanners)"
    ],
    "references": [
      "https://github.com/RhinoSecurityLabs/pacu/blob/866376cd711666c775bbfcde0524c817f2c5b181/pacu/modules/guardduty__whitelist_ip/main.py#L9"
    ],
    "_filename": "aws_guardduty_disruption.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "guardduty.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "CreateIPSet"
      }
    }
  },
  {
    "rule_id": "0a5177f4-6ca9-44c2-aacf-d3f3d8b6e4d2",
    "title": "AWS IAM Backdoor Users Keys",
    "description": "Detects AWS API key creation for a user by another user.\nBackdoored users can be used to obtain persistence in the AWS environment.\nAlso with this alert, you can detect a flow of AWS keys in your org.\n",
    "severity": "medium",
    "author": "faloker",
    "mitre_tags": [
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection_source": {
        "eventSource": "iam.amazonaws.com",
        "eventName": "CreateAccessKey"
      },
      "filter": {
        "userIdentity.arn|contains": "responseElements.accessKey.userName"
      },
      "condition": "selection_source and not filter"
    },
    "false_positives": [
      "Adding user keys to their own accounts (the filter cannot cover all possible variants of user naming)",
      "AWS API keys legitimate exchange workflows"
    ],
    "references": [
      "https://github.com/RhinoSecurityLabs/pacu/blob/866376cd711666c775bbfcde0524c817f2c5b181/pacu/modules/iam__backdoor_users_keys/main.py"
    ],
    "_filename": "aws_iam_backdoor_users_keys.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "iam.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "CreateAccessKey"
      }
    }
  },
  {
    "rule_id": "db014773-b1d3-46bd-ba26-133337c0ffee",
    "title": "AWS IAM S3Browser LoginProfile Creation",
    "description": "Detects S3 Browser utility performing reconnaissance looking for existing IAM Users without a LoginProfile defined then (when found) creating a LoginProfile.",
    "severity": "high",
    "author": "daniel.bohannon@permiso.io (@danielhbohannon)",
    "mitre_tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1059.009",
      "attack.t1078.004"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "iam.amazonaws.com",
        "eventName": [
          "GetLoginProfile",
          "CreateLoginProfile"
        ],
        "userAgent|contains": "S3 Browser"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Valid usage of S3 Browser for IAM LoginProfile listing and/or creation"
    ],
    "references": [
      "https://permiso.io/blog/s/unmasking-guivil-new-cloud-threat-actor"
    ],
    "_filename": "aws_iam_s3browser_loginprofile_creation.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "iam.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "GetLoginProfile",
          "CreateLoginProfile"
        ]
      },
      "userAgent|contains": {
        "type": "exact",
        "value": "S3 Browser"
      }
    }
  },
  {
    "rule_id": "db014773-d9d9-4792-91e5-133337c0ffee",
    "title": "AWS IAM S3Browser User or AccessKey Creation",
    "description": "Detects S3 Browser utility creating IAM User or AccessKey.",
    "severity": "high",
    "author": "daniel.bohannon@permiso.io (@danielhbohannon)",
    "mitre_tags": [
      "attack.execution",
      "attack.persistence",
      "attack.t1059.009",
      "attack.t1078.004"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "iam.amazonaws.com",
        "eventName": [
          "CreateUser",
          "CreateAccessKey"
        ],
        "userAgent|contains": "S3 Browser"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Valid usage of S3 Browser for IAM User and/or AccessKey creation"
    ],
    "references": [
      "https://permiso.io/blog/s/unmasking-guivil-new-cloud-threat-actor"
    ],
    "_filename": "aws_iam_s3browser_user_or_accesskey_creation.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "iam.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "CreateUser",
          "CreateAccessKey"
        ]
      },
      "userAgent|contains": {
        "type": "exact",
        "value": "S3 Browser"
      }
    }
  },
  {
    "rule_id": "ec541962-c05a-4420-b9ea-84de072d18f4",
    "title": "New AWS Lambda Function URL Configuration Created",
    "description": "Detects when a user creates a Lambda function URL configuration, which could be used to expose the function to the internet and potentially allow unauthorized access to the function's IAM role for AWS API calls.\nThis could give an adversary access to the privileges associated with the Lambda service role that is attached to that function.\n",
    "severity": "medium",
    "author": "Ivan Saakov",
    "mitre_tags": [
      "attack.initial-access",
      "attack.privilege-escalation"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "lambda.amazonaws.com",
        "eventName": "CreateFunctionUrlConfig"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Creating a Lambda function URL configuration may be performed by a system administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment.",
      "Creating a Lambda function URL configuration from unfamiliar users should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunctionUrlConfig.html",
      "https://cloud.hacktricks.xyz/pentesting-cloud/aws-security/aws-privilege-escalation/aws-lambda-privesc",
      "https://www.wiz.io/blog/how-to-set-secure-defaults-on-aws"
    ],
    "_filename": "aws_lambda_function_url.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "lambda.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "CreateFunctionUrlConfig"
      }
    }
  },
  {
    "rule_id": "97fbabf8-8e1b-47a2-b7d5-a418d2b95e3d",
    "title": "AWS New Lambda Layer Attached",
    "description": "Detects when a user attached a Lambda layer to an existing Lambda function.\nA malicious Lambda layer could execute arbitrary code in the context of the function's IAM role.\nThis would give an adversary access to resources that the function has access to.\n",
    "severity": "low",
    "author": "Austin Songer",
    "mitre_tags": [
      "attack.privilege-escalation"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "lambda.amazonaws.com",
        "eventName|startswith": "UpdateFunctionConfiguration",
        "requestParameters.layers|contains": "*"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Lambda Layer being attached may be performed by a system administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment.",
      "Lambda Layer being attached from unfamiliar users should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://docs.aws.amazon.com/lambda/latest/dg/API_UpdateFunctionConfiguration.html",
      "https://github.com/clearvector/lambda-spy"
    ],
    "_filename": "aws_new_lambda_layer_attached.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "lambda.amazonaws.com"
      },
      "eventName|startswith": {
        "type": "exact",
        "value": "UpdateFunctionConfiguration"
      },
      "requestParameters.layers|contains": {
        "type": "exact",
        "value": "*"
      }
    }
  },
  {
    "rule_id": "6a7b8c9d-0e1f-2a3b-4c5d-6e7f8g9h0i1j",
    "title": "AWS Organizations LeaveOrganization API Call",
    "description": "Detects usage of the LeaveOrganization API call, which removes a member account from its parent AWS Organization.",
    "severity": "high",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "aws",
      "service": "organizations",
      "category": "management"
    },
    "detection": {
      "selection": {
        "eventSource": "organizations.amazonaws.com",
        "eventName": "LeaveOrganization"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Legitimate administrative actions removing an account from an organization"
    ],
    "references": [
      "https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.organizations-leave/",
      "https://docs.aws.amazon.com/organizations/latest/APIReference/API_LeaveOrganization.html"
    ],
    "_filename": "aws_organizations_leaveorganization.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "organizations.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "LeaveOrganization"
      }
    }
  },
  {
    "rule_id": "4990c2e3-f4b8-45e3-bc3c-30b14ff0ed26",
    "title": "AWS Glue Development Endpoint Activity",
    "description": "Detects possible suspicious glue development endpoint activity.",
    "severity": "low",
    "author": "Austin Songer @austinsonger",
    "mitre_tags": [
      "attack.privilege-escalation"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "glue.amazonaws.com",
        "eventName": [
          "CreateDevEndpoint",
          "DeleteDevEndpoint",
          "UpdateDevEndpoint"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "Glue Development Endpoint Activity may be performed by a system administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment.",
      "If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://rhinosecuritylabs.com/aws/aws-privilege-escalation-methods-mitigation/",
      "https://docs.aws.amazon.com/glue/latest/webapi/API_CreateDevEndpoint.html"
    ],
    "_filename": "aws_passed_role_to_glue_development_endpoint.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "glue.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "CreateDevEndpoint",
          "DeleteDevEndpoint",
          "UpdateDevEndpoint"
        ]
      }
    }
  },
  {
    "rule_id": "8a63cdd4-6207-414a-85bc-7e032bd3c1a2",
    "title": "AWS RDS Master Password Change",
    "description": "Detects the change of database master password. It may be a part of data exfiltration.",
    "severity": "medium",
    "author": "faloker",
    "mitre_tags": [
      "attack.exfiltration",
      "attack.t1020"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection_source": {
        "eventSource": "rds.amazonaws.com",
        "responseElements.pendingModifiedValues.masterUserPassword|contains": "*",
        "eventName": "ModifyDBInstance"
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Benign changes to a db instance"
    ],
    "references": [
      "https://github.com/RhinoSecurityLabs/pacu/blob/866376cd711666c775bbfcde0524c817f2c5b181/pacu/modules/rds__explore_snapshots/main.py"
    ],
    "_filename": "aws_rds_change_master_password.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "rds.amazonaws.com"
      },
      "responseElements.pendingModifiedValues.masterUserPassword|contains": {
        "type": "exact",
        "value": "*"
      },
      "eventName": {
        "type": "exact",
        "value": "ModifyDBInstance"
      }
    }
  },
  {
    "rule_id": "457cc9ac-d8e6-4d1d-8c0e-251d0f11a74c",
    "title": "Modification or Deletion of an AWS RDS Cluster",
    "description": "Detects modifications to an RDS cluster or its deletion, which may indicate potential data exfiltration attempts, unauthorized access, or exposure of sensitive information.",
    "severity": "high",
    "author": "Ivan Saakov",
    "mitre_tags": [
      "attack.exfiltration",
      "attack.t1020"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "rds.amazonaws.com",
        "eventName": [
          "ModifyDBCluster",
          "DeleteDBCluster"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "Verify if the modification or deletion was performed by an authorized administrator.",
      "Confirm if the modification or deletion was part of a planned change or maintenance activity."
    ],
    "references": [
      "https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_ModifyDBCluster.html",
      "https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DeleteDBCluster.html",
      "https://cloud.hacktricks.xyz/pentesting-cloud/aws-security/aws-privilege-escalation/aws-rds-privesc#rds-modifydbinstance"
    ],
    "_filename": "aws_rds_dbcluster_actions.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "rds.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "ModifyDBCluster",
          "DeleteDBCluster"
        ]
      }
    }
  },
  {
    "rule_id": "c3f265c7-ff03-4056-8ab2-d486227b4599",
    "title": "Restore Public AWS RDS Instance",
    "description": "Detects the recovery of a new public database instance from a snapshot. It may be a part of data exfiltration.",
    "severity": "high",
    "author": "faloker",
    "mitre_tags": [
      "attack.exfiltration",
      "attack.t1020"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection_source": {
        "eventSource": "rds.amazonaws.com",
        "responseElements.publiclyAccessible": "true",
        "eventName": "RestoreDBInstanceFromDBSnapshot"
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Unknown"
    ],
    "references": [
      "https://github.com/RhinoSecurityLabs/pacu/blob/866376cd711666c775bbfcde0524c817f2c5b181/pacu/modules/rds__explore_snapshots/main.py"
    ],
    "_filename": "aws_rds_public_db_restore.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "rds.amazonaws.com"
      },
      "responseElements.publiclyAccessible": {
        "type": "exact",
        "value": "true"
      },
      "eventName": {
        "type": "exact",
        "value": "RestoreDBInstanceFromDBSnapshot"
      }
    }
  },
  {
    "rule_id": "5f6e7d8c-9b0a-1c2d-3e4f-5a6b7c8d9e0f",
    "title": "AWS Route 53 Resolver Query Log Configuration Deletion",
    "description": "Detects deletion of Route 53 Resolver query logging configurations, which can disrupt DNS logging and hinder security monitoring.",
    "severity": "high",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.defense_evasion",
      "attack.t1562.002"
    ],
    "logsource": {
      "product": "aws",
      "service": "route53resolver"
    },
    "detection": {
      "selection": {
        "eventSource": "route53resolver.amazonaws.com",
        "eventName": "DeleteResolverQueryLogConfig"
      },
      "condition": "selection"
    },
    "false_positives": [
      "Legitimate administrative actions removing obsolete DNS query logging configurations"
    ],
    "references": [
      "https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.dns-delete-logs/",
      "https://docs.aws.amazon.com/Route53/latest/APIReference/API_DeleteResolverQueryLogConfig.html"
    ],
    "_filename": "aws_route53resolver_deleteresolver.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "route53resolver.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "DeleteResolverQueryLogConfig"
      }
    }
  },
  {
    "rule_id": "3940b5f1-3f46-44aa-b746-ebe615b879e0",
    "title": "AWS Route 53 Domain Transfer Lock Disabled",
    "description": "Detects when a transfer lock was removed from a Route 53 domain. It is recommended to refrain from performing this action unless intending to transfer the domain to a different registrar.",
    "severity": "low",
    "author": "Elastic, Austin Songer @austinsonger",
    "mitre_tags": [
      "attack.persistence",
      "attack.credential-access",
      "attack.t1098"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "route53.amazonaws.com",
        "eventName": "DisableDomainTransferLock"
      },
      "condition": "selection"
    },
    "false_positives": [
      "A domain transfer lock may be disabled by a system or network administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment. Activity from unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://github.com/elastic/detection-rules/blob/c76a39796972ecde44cb1da6df47f1b6562c9770/rules/integrations/aws/persistence_route_53_domain_transfer_lock_disabled.toml",
      "https://docs.aws.amazon.com/Route53/latest/APIReference/API_Operations_Amazon_Route_53.html",
      "https://docs.aws.amazon.com/Route53/latest/APIReference/API_domains_DisableDomainTransferLock.html"
    ],
    "_filename": "aws_route_53_domain_transferred_lock_disabled.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "route53.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "DisableDomainTransferLock"
      }
    }
  },
  {
    "rule_id": "b056de1a-6e6e-4e40-a67e-97c9808cf41b",
    "title": "AWS Route 53 Domain Transferred to Another Account",
    "description": "Detects when a request has been made to transfer a Route 53 domain to another AWS account.",
    "severity": "low",
    "author": "Elastic, Austin Songer @austinsonger",
    "mitre_tags": [
      "attack.persistence",
      "attack.credential-access",
      "attack.t1098"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "route53.amazonaws.com",
        "eventName": "TransferDomainToAnotherAwsAccount"
      },
      "condition": "selection"
    },
    "false_positives": [
      "A domain may be transferred to another AWS account by a system or network administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment. Domain transfers from unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://github.com/elastic/detection-rules/blob/c76a39796972ecde44cb1da6df47f1b6562c9770/rules/integrations/aws/persistence_route_53_domain_transferred_to_another_account.toml"
    ],
    "_filename": "aws_route_53_domain_transferred_to_another_account.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "route53.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "TransferDomainToAnotherAwsAccount"
      }
    }
  },
  {
    "rule_id": "78b3756a-7804-4ef7-8555-7b9024a02e2d",
    "title": "AWS S3 Data Management Tampering",
    "description": "Detects when a user tampers with S3 data management in Amazon Web Services.",
    "severity": "low",
    "author": "Austin Songer @austinsonger",
    "mitre_tags": [
      "attack.exfiltration",
      "attack.t1537"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "s3.amazonaws.com",
        "eventName": [
          "PutBucketLogging",
          "PutBucketWebsite",
          "PutEncryptionConfiguration",
          "PutLifecycleConfiguration",
          "PutReplicationConfiguration",
          "ReplicateObject",
          "RestoreObject"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "A S3 configuration change may be done by a system or network administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment. S3 configuration change from unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://github.com/elastic/detection-rules/pull/1145/files",
      "https://docs.aws.amazon.com/AmazonS3/latest/API/API_Operations.html",
      "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLogging.html",
      "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html",
      "https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketEncryption.html",
      "https://docs.aws.amazon.com/AmazonS3/latest/userguide/setting-repl-config-perm-overview.html",
      "https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html"
    ],
    "_filename": "aws_s3_data_management_tampering.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "s3.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "PutBucketLogging",
          "PutBucketWebsite",
          "PutEncryptionConfiguration",
          "PutLifecycleConfiguration",
          "PutReplicationConfiguration",
          "ReplicateObject",
          "RestoreObject"
        ]
      }
    }
  },
  {
    "rule_id": "4d5e6f7a-8b9c-0d1e-2f3a-4b5c6d7e8f9g",
    "title": "AWS S3 Lifecycle Rule with Short Expiration on CloudTrail Bucket",
    "description": "Detects the application of an S3 Lifecycle Rule with a short expiration period on the S3 bucket used by AWS CloudTrail, which could lead to premature deletion of log files.",
    "severity": "high",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.defense_evasion",
      "attack.t1562.001"
    ],
    "logsource": {
      "product": "aws",
      "service": "s3",
      "category": "management"
    },
    "detection": {
      "selection": {
        "eventSource": "s3.amazonaws.com",
        "eventName": "PutBucketLifecycleConfiguration",
        "requestParameters.lifecycleConfiguration.rules": [
          {
            "expiration": {
              "days": 1
            }
          }
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "Legitimate administrative actions setting short expiration periods for specific operational needs"
    ],
    "references": [
      "https://stratus-red-team.cloud/attack-techniques/AWS/aws.defense-evasion.cloudtrail-lifecycle-rule/",
      "https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html"
    ],
    "_filename": "aws_s3_lifecycle.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "s3.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "PutBucketLifecycleConfiguration"
      },
      "requestParameters.lifecycleConfiguration.rules": {
        "type": "list",
        "values": [
          {
            "expiration": {
              "days": 1
            }
          }
        ]
      }
    }
  },
  {
    "rule_id": "4a60ff0-36fb-42b7-9b58-a5b53019fb74",
    "title": "AWS SecretsManager GetSecretValue",
    "description": "Detects GetSecretValue in AWS Secrets Manager",
    "severity": "low",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.credential_access",
      "attack.t1552"
    ],
    "logsource": {
      "product": "aws",
      "service": "secretsmanager"
    },
    "detection": {
      "selection_source": {
        "eventSource": "secretsmanager.amazonaws.com",
        "eventName": [
          "GetSecretValue"
        ]
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Valid GetSecretValue"
    ],
    "references": [
      "https://traildiscover.cloud/#GetSecretValue"
    ],
    "_filename": "aws_secretsmanager_batchgetsecretvalue.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "secretsmanager.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "GetSecretValue"
        ]
      }
    }
  },
  {
    "rule_id": "4a60ff0-36fb-42b7-9b58-a5b53019fb74",
    "title": "AWS SecretsManager GetSecretValue",
    "description": "Detects GetSecretValue in AWS Secrets Manager",
    "severity": "low",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.credential_access",
      "attack.t1552"
    ],
    "logsource": {
      "product": "aws",
      "service": "secretsmanager"
    },
    "detection": {
      "selection_source": {
        "eventSource": "secretsmanager.amazonaws.com",
        "eventName": [
          "GetSecretValue"
        ]
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Valid GetSecretValue"
    ],
    "references": [
      "https://traildiscover.cloud/#GetSecretValue"
    ],
    "_filename": "aws_secretsmanager_getsecrets.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "secretsmanager.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "GetSecretValue"
        ]
      }
    }
  },
  {
    "rule_id": "a607e1fe-74bf-4440-a3ec-b059b9103157",
    "title": "AWS SecurityHub Findings Evasion",
    "description": "Detects the modification of the findings on SecurityHub.",
    "severity": "high",
    "author": "Sittikorn S",
    "mitre_tags": [
      "attack.defense-evasion",
      "attack.t1562"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "securityhub.amazonaws.com",
        "eventName": [
          "BatchUpdateFindings",
          "DeleteInsight",
          "UpdateFindings",
          "UpdateInsight"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "System or Network administrator behaviors",
      "DEV, UAT, SAT environment. You should apply this rule with PROD environment only."
    ],
    "references": [
      "https://docs.aws.amazon.com/cli/latest/reference/securityhub/"
    ],
    "_filename": "aws_securityhub_finding_evasion.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "securityhub.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "BatchUpdateFindings",
          "DeleteInsight",
          "UpdateFindings",
          "UpdateInsight"
        ]
      }
    }
  },
  {
    "rule_id": "abae8fec-57bd-4f87-aff6-6e3db989843d",
    "title": "AWS Snapshot Backup Exfiltration",
    "description": "Detects the modification of an EC2 snapshot's permissions to enable access from another account",
    "severity": "medium",
    "author": "Darin Smith",
    "mitre_tags": [
      "attack.exfiltration",
      "attack.t1537"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection_source": {
        "eventSource": "ec2.amazonaws.com",
        "eventName": "ModifySnapshotAttribute"
      },
      "condition": "selection_source"
    },
    "false_positives": [
      "Valid change to a snapshot's permissions"
    ],
    "references": [
      "https://www.justice.gov/file/1080281/download"
    ],
    "_filename": "aws_snapshot_backup_exfiltration.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ec2.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "ModifySnapshotAttribute"
      }
    }
  },
  {
    "rule_id": "3c4d5e6f-7a8b-9c0d-1e2f-3a4b5c6d7e8f",
    "title": "AWS SSM GetParameter(s) with Decryption",
    "description": "Detects usage of the GetParameter and GetParameters API calls with the withDecryption flag set to true, which retrieves decrypted SecureString parameters from AWS Systems Manager Parameter Store.",
    "severity": "medium",
    "author": "adanalvarez",
    "mitre_tags": [
      "attack.credential_access",
      "attack.t1552"
    ],
    "logsource": {
      "product": "aws",
      "service": "ssm"
    },
    "detection": {
      "selection": {
        "eventSource": "ssm.amazonaws.com",
        "eventName": [
          "GetParameter",
          "GetParameters"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "Legitimate administrative actions retrieving SecureString parameters with decryption"
    ],
    "references": [
      "https://stratus-red-team.cloud/attack-techniques/AWS/aws.credential-access.ssm-retrieve-securestring-parameters/",
      "https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetParameter.html",
      "https://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetParameters.html"
    ],
    "_filename": "aws_ssm_ssmgetparameter.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "ssm.amazonaws.com"
      },
      "eventName": {
        "type": "list",
        "values": [
          "GetParameter",
          "GetParameters"
        ]
      }
    }
  },
  {
    "rule_id": "d3adb3ef-b7e7-4003-9092-1924c797db35",
    "title": "AWS Identity Center Identity Provider Change",
    "description": "Detects a change in the AWS Identity Center (FKA AWS SSO) identity provider.\nA change in identity provider allows an attacker to establish persistent access or escalate privileges via user impersonation.\n",
    "severity": "high",
    "author": "Michael McIntyre @wtfender",
    "mitre_tags": [
      "attack.persistence",
      "attack.t1556"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": [
          "sso-directory.amazonaws.com",
          "sso.amazonaws.com"
        ],
        "eventName": [
          "AssociateDirectory",
          "DisableExternalIdPConfigurationForDirectory",
          "DisassociateDirectory",
          "EnableExternalIdPConfigurationForDirectory"
        ]
      },
      "condition": "selection"
    },
    "false_positives": [
      "Authorized changes to the AWS account's identity provider"
    ],
    "references": [
      "https://docs.aws.amazon.com/singlesignon/latest/userguide/app-enablement.html",
      "https://docs.aws.amazon.com/singlesignon/latest/userguide/sso-info-in-cloudtrail.html",
      "https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiamidentitycentersuccessortoawssinglesign-on.html"
    ],
    "_filename": "aws_sso_idp_change.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "list",
        "values": [
          "sso-directory.amazonaws.com",
          "sso.amazonaws.com"
        ]
      },
      "eventName": {
        "type": "list",
        "values": [
          "AssociateDirectory",
          "DisableExternalIdPConfigurationForDirectory",
          "DisassociateDirectory",
          "EnableExternalIdPConfigurationForDirectory"
        ]
      }
    }
  },
  {
    "rule_id": "b45ab1d2-712f-4f01-a751-df3826969807",
    "title": "AWS STS GetSessionToken Misuse",
    "description": "Identifies the suspicious use of GetSessionToken. Tokens could be created and used by attackers to move laterally and escalate privileges.",
    "severity": "low",
    "author": "Austin Songer @austinsonger",
    "mitre_tags": [
      "attack.lateral-movement",
      "attack.privilege-escalation",
      "attack.t1548",
      "attack.t1550",
      "attack.t1550.001"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "sts.amazonaws.com",
        "eventName": "GetSessionToken",
        "userIdentity.type": "IAMUser"
      },
      "condition": "selection"
    },
    "false_positives": [
      "GetSessionToken may be done by a system or network administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment. GetSessionToken from unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
    ],
    "references": [
      "https://github.com/elastic/detection-rules/pull/1213",
      "https://docs.aws.amazon.com/STS/latest/APIReference/API_GetSessionToken.html"
    ],
    "_filename": "aws_sts_getsessiontoken_misuse.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "sts.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "GetSessionToken"
      },
      "userIdentity.type": {
        "type": "exact",
        "value": "IAMUser"
      }
    }
  },
  {
    "rule_id": "055fb148-60f8-462d-ad16-26926ce050f1",
    "title": "AWS User Login Profile Was Modified",
    "description": "Detects activity when someone is changing passwords on behalf of other users.\nAn attacker with the \"iam:UpdateLoginProfile\" permission on other users can change the password used to login to the AWS console on any user that already has a login profile setup.\n",
    "severity": "high",
    "author": "toffeebr33k",
    "mitre_tags": [
      "attack.persistence",
      "attack.t1098"
    ],
    "logsource": {
      "product": "aws",
      "service": "cloudtrail"
    },
    "detection": {
      "selection": {
        "eventSource": "iam.amazonaws.com",
        "eventName": "UpdateLoginProfile"
      },
      "filter_main_user_identity": {
        "userIdentity.arn|fieldref": "requestParameters.userName"
      },
      "condition": "selection and not 1 of filter_main_*"
    },
    "false_positives": [
      "Legitimate user account administration"
    ],
    "references": [
      "https://github.com/RhinoSecurityLabs/AWS-IAM-Privilege-Escalation"
    ],
    "_filename": "aws_update_login_profile.yml",
    "_parsed_conditions": {
      "eventSource": {
        "type": "exact",
        "value": "iam.amazonaws.com"
      },
      "eventName": {
        "type": "exact",
        "value": "UpdateLoginProfile"
      }
    }
  }
]